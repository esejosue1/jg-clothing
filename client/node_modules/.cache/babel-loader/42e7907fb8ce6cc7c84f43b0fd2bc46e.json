{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapchotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccessful = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); //funct that will pass the compon. async\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections'); //name of the collection in firestore\n\n    dispatch(fetchCollectionsStart()); // run fetchCollection start\n    //get data, when the code runs,it will send us the snapshot of the collections array\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapchotToMap(snapshot);\n      dispatch(fetchCollectionsSuccessful(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/josue/OneDrive/Escritorio/e-web/jg-cothing/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapchotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccessful","collectionsMap","FETCH_COLLECTIONS_SUCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AACA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAN,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAGC,cAAc,KAAI;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAJ,CAAjD;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAI;AACnDP,EAAAA,IAAI,EAACJ,eAAe,CAACY,yBAD8B;AAEnDH,EAAAA,OAAO,EAAEE;AAF0C,CAAJ,CAA5C,C,CAKP;;AACA,OAAO,MAAME,0BAA0B,GAAG,MAAK;AAC3C,SAAOC,QAAQ,IAAG;AACd,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CADc,CAC4C;;AAC1DF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAFc,CAEqB;AAEnC;;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAa;AACnC,YAAMZ,cAAc,GAAEL,+BAA+B,CAACiB,QAAD,CAArD;AACCL,MAAAA,QAAQ,CAACR,0BAA0B,CAACC,cAAD,CAA3B,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIH,GATD;AAUH,CAXM","sourcesContent":["\r\nimport ShopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapchotToMap} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsSuccessful = collectionsMap =>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCESS,\r\n    payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage =>({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\n//funct that will pass the compon. async\r\nexport const fetchCollectionsStartAsync = () =>{\r\n    return dispatch =>{\r\n        const collectionRef = firestore.collection('collections');//name of the collection in firestore\r\n        dispatch(fetchCollectionsStart()); // run fetchCollection start\r\n\r\n        //get data, when the code runs,it will send us the snapshot of the collections array\r\n        collectionRef.get().then((snapshot) =>{\r\n           const collectionsMap= convertCollectionsSnapchotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccessful(collectionsMap));\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}