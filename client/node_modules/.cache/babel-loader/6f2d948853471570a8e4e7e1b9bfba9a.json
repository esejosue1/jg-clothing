{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\OneDrive\\\\Escritorio\\\\e-web\\\\jg-cothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\n//component for signing in the user\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-botton/custom-botton.components';\nimport { SignInButton, SignInTitle, SignInContainer } from './sign-in.styles.jsx';\nimport { connect } from \"react-redux\";\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'; //store the users inputed email\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  }; //target the name with the inputed value\n  //for example, email, what email they typed is the value\n\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \" Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"u+fjkKgjBm3nqS9OOZULFYiGQEo=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/josue/OneDrive/Escritorio/e-web/jg-cothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","SignInButton","SignInTitle","SignInContainer","connect","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["//component for signing in the user\r\n\r\nimport React, {useState} from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-botton/custom-botton.components';\r\nimport {\r\n    SignInButton,\r\n    SignInTitle,\r\n    SignInContainer\r\n} from './sign-in.styles.jsx';\r\nimport {connect} from \"react-redux\";\r\nimport {googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'; \r\n\r\n//store the users inputed email\r\nconst SignIn = ({emailSignInStart, googleSignInStart}) =>{\r\n    const [userCredentials, setCredentials] = useState({email: '', password:''})\r\n    const {email, password}=userCredentials;\r\n\r\n    const handleSubmit = async event =>{\r\n        event.preventDefault();\r\n        emailSignInStart(email, password)\r\n    }\r\n\r\n    //target the name with the inputed value\r\n    //for example, email, what email they typed is the value\r\n    const handleChange = event =>{\r\n        const {value, name} = event.target;\r\n        setCredentials({...userCredentials, [name]: value})\r\n    }\r\n\r\n        return(\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n                <form onSubmit={handleSubmit}>\r\n                    \r\n                    <FormInput\r\n                    name='email' \r\n                    type='email' \r\n                    handleChange={handleChange} \r\n                    value={email} \r\n                    label='email'\r\n                    required />\r\n                    \r\n                    <FormInput\r\n                        name='password' \r\n                        type='password' \r\n                        value={password} \r\n                        handleChange={handleChange}\r\n                        label='password'\r\n                        required />\r\n                        \r\n                    <div className='buttons'>    \r\n                    {/* Applying the button component with its children */}\r\n                    <CustomButton type='submit'> Sign In</CustomButton>\r\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn> Sign In With Google</CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}