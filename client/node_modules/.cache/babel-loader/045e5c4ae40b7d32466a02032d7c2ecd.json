{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux'; // local storage for cart\n\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // import thunk from 'redux-thunk'; //fire functions that return functions\n\nimport createSagaMiddleWare from 'redux-saga'; //saga are middleware that only fire when certain functions are runned\n\nimport rootReducer from './root.reducer';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleWare(); //logs tthe actions deployed, but use the if so see the logs for only devs\n// const middlewares=[logger]; to log no matter who sees it\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //run the sagas\n\nsagaMiddleware.run(rootSaga); // creating persisting versiono of store\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/josue/OneDrive/Escritorio/e-web/jg-cothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleWare","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C,C,CACA;;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CAA+C;;AAC/C,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;AACA;;AACA,MAAMI,WAAW,GAAC,CAACD,cAAD,CAAlB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAED,OAAO,MAAMU,KAAK,GAACb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAvB,C,CAEP;;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB,E,CAEA;;AACA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\n// local storage for cart\r\nimport {persistStore} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\n// import thunk from 'redux-thunk'; //fire functions that return functions\r\nimport createSagaMiddleWare from 'redux-saga'; //saga are middleware that only fire when certain functions are runned\r\nimport rootReducer from './root.reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleWare();\r\n\r\n//logs tthe actions deployed, but use the if so see the logs for only devs\r\n// const middlewares=[logger]; to log no matter who sees it\r\nconst middlewares=[sagaMiddleware]\r\n\r\nif (process.env.NODE_ENV === 'development'){\r\n    middlewares.push(logger)\r\n}\r\n\r\nexport const store=createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n//run the sagas\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// creating persisting versiono of store\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {store, persistor};"]},"metadata":{},"sourceType":"module"}