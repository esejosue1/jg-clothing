{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\josue\\\\OneDrive\\\\Escritorio\\\\e-web\\\\jg-cothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\n//component for sign out \nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-botton/custom-botton.components';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userCredetials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredetials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password don't match\");\n      return;\n    } //call saga to sign up user. props into userCredentials\n\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredetials,\n      [name]: value\n    });\n  }; // create the sign up form for new users who want to sign up\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"join the crew, create an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"M12r3eUSe8lRd5BSS7LR9lMgcPQ=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/josue/OneDrive/Escritorio/e-web/jg-cothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredetials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["//component for sign out \r\n\r\nimport React, {useState} from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-botton/custom-botton.components';\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux';\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n    const [userCredetials, setUserCredentials] = useState({\r\n        displayName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    });\r\n\r\n    const {displayName, email, password, confirmPassword} = userCredetials;\r\n\r\n\r\n    const handleSubmit = async event =>{\r\n        event.preventDefault();\r\n\r\n        if (password !== confirmPassword){\r\n            alert(\"Password don't match\");\r\n            return;\r\n        }\r\n        //call saga to sign up user. props into userCredentials\r\n        signUpStart({displayName, email, password})\r\n    };\r\n\r\n    const handleChange = event =>{\r\n        const{name, value} = event.target;\r\n        setUserCredentials({...userCredetials, [name]: value});\r\n    }\r\n\r\n        // create the sign up form for new users who want to sign up\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>join the crew, create an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                    <FormInput \r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={handleChange}\r\n                        label='Display Name'\r\n                        required\r\n                        />\r\n                   \r\n                    <FormInput \r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        label='Email'\r\n                        required\r\n                        />\r\n                    \r\n                    <FormInput \r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        label='Password'\r\n                        required\r\n                        />\r\n\r\n                    <FormInput \r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n                        />\r\n\r\n                        <CustomButton type='submit' >Sign Up</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect (null, mapDispatchToProps) (SignUp);"]},"metadata":{},"sourceType":"module"}