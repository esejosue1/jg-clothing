{"ast":null,"code":"//creating selectors\nimport { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], // object.key turns the object to an array\n// map over the the items of each array\n//if collections exists run, if not return an array\ncollections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], //if collection params donest exist\ncollections => collections ? // find collection.id matching the url parameter of our collection id map\ncollections[collectionUrlParam] : null); //create selector call, want shop object, return shop fetching\n\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching); //check is the collection is already loaded, turning null into a boolean\n\nexport const selectIsCollectionLoaded = createSelector([selectShop], shop => !!shop.collections //if our collection is loaded, return true\n);","map":{"version":3,"sources":["C:/Users/josue/OneDrive/Escritorio/e-web/jg-cothing/client/src/redux/shop/shop.selector.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"mappings":"AAAA;AACA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAErD;AACA;AACA;AACAC,WAAW,IAAIA,WAAW,GAC1BE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EACCI,GADD,CACKC,GAAG,IAAIL,WAAW,CAACK,GAAD,CADvB,CAD0B,GAGxB,EARmD,CAAlD;AAWP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAClDZ,cAAc,CACV,CAACI,iBAAD,CADU,EAEV;AACCC,WAAW,IAAIA,WAAW,GAC3B;AACAA,WAAW,CAACO,kBAAD,CAFgB,GAGzB,IANQ,CADP,C,CAUP;;AACA,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAGA,IAAI,CAACW,UAFwC,CAAjD,C,CAKP;;AACA,OAAO,MAAMC,wBAAwB,GAAGf,cAAc,CAClD,CAACC,UAAD,CADkD,EAElDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFmC,CAEvB;AAFuB,CAA/C","sourcesContent":["//creating selectors\r\nimport {createSelector} from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    // object.key turns the object to an array\r\n    // map over the the items of each array\r\n    //if collections exists run, if not return an array\r\n    collections => collections ?\r\n    Object.keys(collections)\r\n    .map(key => collections[key])\r\n    : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\ncreateSelector(\r\n    [selectCollections],\r\n    //if collection params donest exist\r\n    (collections => collections ?\r\n    // find collection.id matching the url parameter of our collection id map\r\n    collections[collectionUrlParam]\r\n    : null)\r\n);\r\n\r\n//create selector call, want shop object, return shop fetching\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop =>shop.isFetching\r\n);\r\n\r\n//check is the collection is already loaded, turning null into a boolean\r\nexport const selectIsCollectionLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections //if our collection is loaded, return true\r\n);"]},"metadata":{},"sourceType":"module"}